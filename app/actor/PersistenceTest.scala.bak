package actor

/**
 * Created by cookeem on 16/1/6.
 */
import PersistenceObj._
import akka.actor._
import akka.persistence._
import com.typesafe.config.ConfigFactory

object PersistenceObj {
  case class Cmd(data: String)
  case class Evt(data: String)
  case class ExampleState(events: List[String] = Nil) {
    def updated(evt: Evt): ExampleState = copy(evt.data :: events)
    def size: Int = events.length
    override def toString: String = events.reverse.toString
  }
}

class ExamplePersistentActor extends PersistentActor {
  override def persistenceId = "sample-id-1"
  var state = ExampleState()
  def updateState(event: Evt): Unit =
    state = state.updated(event)
  def numEvents =
    state.size
  val receiveRecover: Receive = {
    case evt: Evt => updateState(evt)
    case SnapshotOffer(_, snapshot: ExampleState) => state = snapshot
  }
  val receiveCommand: Receive = {
    case Cmd(data) =>
      persist(Evt(s"${data}-${numEvents}"))(updateState)
      persist(Evt(s"${data}-${numEvents + 1}")) { event =>
        updateState(event)
        context.system.eventStream.publish(event)
      }
    case "snap" => saveSnapshot(state)
    case "print" => println(s"### $state")
  }
}

object PersistenceTest extends App {
  val configStr = """
    akka {
      persistence {
        journal {
          plugin = "leveldb"
          leveldb {
            dir = "target/journal"
          }
        }
        snapshot-store.local.dir = "target/snapshots"
      }
    }
    leveldb {
      dir = "target/journal"
      checksum: "off"
      class: "akka.persistence.journal.leveldb.LeveldbJournal"
      dir: "target/journal"
      fsync: "on"
      native: "on"
      plugin-dispatcher : "akka.persistence.dispatchers.default-plugin-dispatcher"
      replay-dispatcher : "akka.persistence.dispatchers.default-replay-dispatcher"
    }"""

  val config = ConfigFactory.parseString(configStr)
  val system = ActorSystem("system",config)
  val persistActor = system.actorOf(Props[ExamplePersistentActor],"persistActor")
  persistActor ! Cmd("cookeem")
  persistActor ! "print"
  persistActor ! Cmd("haijian")
  persistActor ! "print"
  persistActor ! "snap"
}
